{"ast":null,"code":"var _jsxFileName = \"/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/UserDislikedRow.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class UserRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: []\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://localhost:5555/userInfo\", {\n      method: \"POST\",\n      crossDomain: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({\n        token: localStorage.getItem(\"token\")\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data, \"userInfo\");\n      // console.log(data.data.movID);\n      this.setState({\n        movies: data.data.badmovID\n      });\n    });\n  }\n  render() {\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\n    var title = \"User\";\n    var isLargeRow = false;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"USER DISLIKED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row__posters\",\n        children: this.state.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `row__poster  ${isLargeRow && \"row__posterLarge\"}`,\n            src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n            alt: movie.name,\n            onClick: () => {\n              this.componentDidMount();\n            }\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","UserRow","constructor","props","state","movies","componentDidMount","fetch","method","crossDomain","headers","Accept","body","JSON","stringify","token","localStorage","getItem","then","res","json","data","console","log","setState","badmovID","render","base_url","title","isLargeRow","map","movie","index","poster_path","backdrop_path","name","id"],"sources":["/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/UserDislikedRow.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nexport default class UserRow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:5555/userInfo\", {\n            method: \"POST\",\n            crossDomain: true,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n            body: JSON.stringify({\n                token: localStorage.getItem(\"token\"),\n            }),\n        })\n            .then((res) => res.json())\n            .then((data) => {\n                console.log(data, \"userInfo\");\n                // console.log(data.data.movID);\n                this.setState({ movies: data.data.badmovID });\n            });\n    }\n\n    render() {\n        const base_url = \"https://image.tmdb.org/t/p/original/\";\n        var title = \"User\";\n        var isLargeRow = false;\n        return (\n            <div className=\"row\">\n                <div className=\"category-header\">\n                    <h2>USER DISLIKED</h2>\n                </div>\n\n                <div className=\"row__posters\">\n                    {this.state.movies.map((movie, index) => (\n                        <>\n                            <img\n                                className={`row__poster  ${isLargeRow && \"row__posterLarge\"}`}\n                                key={movie.id}\n                                src={`${base_url}${\n                                    isLargeRow ? movie.poster_path : movie.backdrop_path\n                                }`}\n                                alt={movie.name}\n                                onClick={() => {\n                                    this.componentDidMount();\n                                }}\n                            ></img>\n                        </>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAEzC,eAAe,MAAMC,OAAO,SAASD,SAAS,CAAC;EAC3CE,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,MAAM,EAAE;IACZ,CAAC;EACL;EAEAC,iBAAiB,GAAG;IAChBC,KAAK,CAAC,gCAAgC,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE,kBAAkB;QAC1B,6BAA6B,EAAE;MACnC,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MACvC,CAAC;IACL,CAAC,CAAC,CACGC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,EAAE,UAAU,CAAC;MAC7B;MACA,IAAI,CAACG,QAAQ,CAAC;QAAEnB,MAAM,EAAEgB,IAAI,CAACA,IAAI,CAACI;MAAS,CAAC,CAAC;IACjD,CAAC,CAAC;EACV;EAEAC,MAAM,GAAG;IACL,MAAMC,QAAQ,GAAG,sCAAsC;IACvD,IAAIC,KAAK,GAAG,MAAM;IAClB,IAAIC,UAAU,GAAG,KAAK;IACtB,oBACI;MAAK,SAAS,EAAC,KAAK;MAAA,wBAChB;QAAK,SAAS,EAAC,iBAAiB;QAAA,uBAC5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAsB;QAAA;QAAA;QAAA;MAAA,QACpB,eAEN;QAAK,SAAS,EAAC,cAAc;QAAA,UACxB,IAAI,CAACzB,KAAK,CAACC,MAAM,CAACyB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAChC;UAAA,uBACI;YACI,SAAS,EAAG,gBAAeH,UAAU,IAAI,kBAAmB,EAAE;YAE9D,GAAG,EAAG,GAAEF,QAAS,GACbE,UAAU,GAAGE,KAAK,CAACE,WAAW,GAAGF,KAAK,CAACG,aAC1C,EAAE;YACH,GAAG,EAAEH,KAAK,CAACI,IAAK;YAChB,OAAO,EAAE,MAAM;cACX,IAAI,CAAC7B,iBAAiB,EAAE;YAC5B;UAAE,GAPGyB,KAAK,CAACK,EAAE;YAAA;YAAA;YAAA;UAAA;QAQV,iBAEd;MAAC;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAEd;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}