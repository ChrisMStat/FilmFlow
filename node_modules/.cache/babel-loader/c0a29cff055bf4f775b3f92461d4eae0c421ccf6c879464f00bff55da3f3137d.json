{"ast":null,"code":"var _jsxFileName = \"/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/UserDislikedRow.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar movie_all;\nvar movie_id = -1;\nvar movie_description = \"\";\nvar movie_name = \"\";\nvar movie_poster = \"\";\nconst API_IMG = \"https://image.tmdb.org/t/p/w200\";\nexport default class UserRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      show: false\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://localhost:5555/userInfo\", {\n      method: \"POST\",\n      crossDomain: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({\n        token: localStorage.getItem(\"token\")\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data, \"userInfo\");\n      // console.log(data.data.movID);\n      this.setState({\n        movies: data.data.badmovID\n      });\n    });\n  }\n  render() {\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\n    var title = \"Liked Movies\";\n    var isLargeRow = false;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row__posters\",\n        children: this.state.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `row__poster  ${isLargeRow && \"row__posterLarge\"}`,\n            src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n            alt: movie.name,\n            onClick: () => {\n              this.componentDidMount();\n              movie_all = movie;\n              movie_id = movie.id;\n              movie_name = movie.title;\n              movie_description = movie.overview;\n              movie_poster = API_IMG + movie.poster_path;\n              this.setState({\n                movies: this.state.movies,\n                show: !this.state.show\n              });\n            }\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"movie_popup\",\n        show: this.state.show,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: movie_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 39\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img-fluid\",\n            src: movie_poster\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Synopsis: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), \" \", movie_description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => this.setState({\n              movies: this.state.movies,\n              show: !this.state.show\n            }),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => this.setState({\n              movies: this.state.movies,\n              show: !this.state.show\n            }),\n            children: \"Unlike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","useEffect","useState","Modal","Button","movie_all","movie_id","movie_description","movie_name","movie_poster","API_IMG","UserRow","constructor","props","state","movies","show","componentDidMount","fetch","method","crossDomain","headers","Accept","body","JSON","stringify","token","localStorage","getItem","then","res","json","data","console","log","setState","badmovID","render","base_url","title","isLargeRow","map","movie","index","poster_path","backdrop_path","name","id","overview"],"sources":["/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/UserDislikedRow.js"],"sourcesContent":["import React, {Component, useEffect, useState} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nvar movie_all;\nvar movie_id = -1;\nvar movie_description = \"\";\nvar movie_name = \"\";\nvar movie_poster = \"\";\nconst API_IMG = \"https://image.tmdb.org/t/p/w200\";\n\n\nexport default class UserRow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n            show: false,\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:5555/userInfo\", {\n            method: \"POST\",\n            crossDomain: true,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n            body: JSON.stringify({\n                token: localStorage.getItem(\"token\"),\n            }),\n        })\n            .then((res) => res.json())\n            .then((data) => {\n                console.log(data, \"userInfo\");\n                // console.log(data.data.movID);\n                this.setState({ movies: data.data.badmovID });\n            });\n    }\n\n    render() {\n        const base_url = \"https://image.tmdb.org/t/p/original/\";\n        var title = \"Liked Movies\";\n        var isLargeRow = false;\n\n        return (\n            <div className=\"row\">\n                <div className=\"category-header\">\n                    <h2>{title}</h2>\n                </div>\n\n                <div className=\"row__posters\">\n                    {this.state.movies.map((movie, index) => (\n                        <>\n                            <img\n                                className={`row__poster  ${isLargeRow && \"row__posterLarge\"}`}\n                                key={movie.id}\n                                src={`${base_url}${\n                                    isLargeRow ? movie.poster_path : movie.backdrop_path\n                                }`}\n                                alt={movie.name}\n                                onClick={() => {\n                                    this.componentDidMount();\n                                    movie_all = movie;\n                                    movie_id = movie.id;\n                                    movie_name = movie.title;\n                                    movie_description = movie.overview;\n                                    movie_poster = (API_IMG) + (movie.poster_path);\n                                    this.setState({movies: this.state.movies, show: !this.state.show });\n                                }}\n                            ></img>\n                        </>\n                    ))}\n                </div>\n\n                <Modal className = \"movie_popup\" show={this.state.show} >\n                    <Modal.Header closeButton>\n                        <Modal.Title> <b>{movie_name}</b> </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <img className = \"img-fluid\" src = {movie_poster}></img>\n                        <p>\n                            <b> Synopsis: </b> {movie_description}\n                        </p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => this.setState({movies: this.state.movies, show: !this.state.show })} >\n                            Close\n                        </Button>\n                        <Button variant=\"danger\" onClick={() => this.setState({movies: this.state.movies, show: !this.state.show })} >\n                            Unlike\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </div>\n        );\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}