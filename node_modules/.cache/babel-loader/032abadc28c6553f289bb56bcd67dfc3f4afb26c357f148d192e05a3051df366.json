{"ast":null,"code":"var _jsxFileName = \"/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/UserRow.js\";\nimport React, { Component, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class UserRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: []\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://localhost:5555/userInfo\", {\n      method: \"POST\",\n      crossDomain: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({\n        token: localStorage.getItem(\"token\")\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data, \"userInfo\");\n      // console.log(data.data.movID);\n      this.setState({\n        movies: data.data.movID\n      });\n    });\n  }\n  render() {\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\n    var title = \"User\";\n    var isLargeRow = false;\n    var movie_all;\n    var movie_id = -1;\n    var movie_description = \"\";\n    var movie_name = \"\";\n    var movie_poster = \"\";\n    const API_IMG = \"https://image.tmdb.org/t/p/w200\";\n    const handleClose = () => setShow(false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"USER LIKED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row__posters\",\n        children: this.state.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `row__poster  ${isLargeRow && \"row__posterLarge\"}`,\n            src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n            alt: movie.name,\n            onClick: () => {\n              //this.componentDidMount();\n              movie_all = movie;\n              movie_id = movie.id;\n              movie_name = movie.title;\n              movie_description = movie.overview;\n              movie_poster = API_IMG + movie.poster_path;\n              setShow(true);\n            }\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"movie_popup\",\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: movie_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 27\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            classNme: \"img-fluid\",\n            src: movie_poster\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Synopsis: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), \" \", movie_description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => {\n              setShow(false);\n            },\n            children: \"Unlike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","useState","Modal","Button","UserRow","constructor","props","state","movies","componentDidMount","fetch","method","crossDomain","headers","Accept","body","JSON","stringify","token","localStorage","getItem","then","res","json","data","console","log","setState","movID","render","base_url","title","isLargeRow","movie_all","movie_id","movie_description","movie_name","movie_poster","API_IMG","handleClose","setShow","map","movie","index","poster_path","backdrop_path","name","id","overview","show"],"sources":["/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/UserRow.js"],"sourcesContent":["import React, {Component, useState} from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default class UserRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movies: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:5555/userInfo\", {\r\n      method: \"POST\",\r\n      crossDomain: true,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify({\r\n        token: localStorage.getItem(\"token\"),\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data, \"userInfo\");\r\n        // console.log(data.data.movID);\r\n        this.setState({ movies: data.data.movID });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n    var title = \"User\";\r\n    var isLargeRow = false;\r\n\r\n    var movie_all;\r\n    var movie_id = -1;\r\n    var movie_description = \"\";\r\n    var movie_name = \"\";\r\n    var movie_poster = \"\";\r\n    const API_IMG = \"https://image.tmdb.org/t/p/w200\";\r\n\r\n    const handleClose = () => setShow(false);\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"category-header\">\r\n          <h2>USER LIKED</h2>\r\n        </div>\r\n\r\n        <div className=\"row__posters\">\r\n          {this.state.movies.map((movie, index) => (\r\n            <>\r\n              <img\r\n                className={`row__poster  ${isLargeRow && \"row__posterLarge\"}`}\r\n                key={movie.id}\r\n                src={`${base_url}${\r\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                }`}\r\n                alt={movie.name}\r\n                onClick={() => {\r\n                  //this.componentDidMount();\r\n                  movie_all = movie;\r\n                  movie_id = movie.id;\r\n                  movie_name = movie.title;\r\n                  movie_description = movie.overview;\r\n                  movie_poster = (API_IMG) + (movie.poster_path);\r\n                  setShow(true);\r\n                }}\r\n              ></img>\r\n            </>\r\n          ))}\r\n        </div>\r\n\r\n        <Modal className = \"movie_popup\" show={show} onHide={handleClose} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title> <b>{movie_name}</b> </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <img classNme = \"img-fluid\" src = {movie_poster}></img>\r\n            <p>\r\n              <b> Synopsis: </b> {movie_description}\r\n            </p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={() => {\r\n              setShow(false);\r\n            }}>\r\n              Unlike\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}