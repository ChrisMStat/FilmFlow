{"ast":null,"code":"var _jsxFileName = \"/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/UserRow.js\",\n  _s = $RefreshSig$();\n//import React, {Component, useState} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nvar result;\nvar movie_all;\nvar movie_id = -1;\nvar movie_description = \"\";\nvar movie_name = \"\";\nvar movie_poster = \"\";\nconst API_IMG = \"https://image.tmdb.org/t/p/w200\";\n\n/*\r\nexport default class UserRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movies: [],\r\n    };\r\n  }\r\n\r\n */\n\n/*\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:5555/userInfo\", {\r\n      method: \"POST\",\r\n      crossDomain: true,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify({\r\n        token: localStorage.getItem(\"token\"),\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data, \"userInfo\");\r\n        // console.log(data.data.movID);\r\n        this.setState({ movies: data.data.movID });\r\n      });\r\n  }\r\n\r\n */\n\nfunction UserRow(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl\n  } = _ref;\n  //const base_url = \"https://image.tmdb.org/t/p/original/\";\n  //var title = \"User\";\n  var isLargeRow = false;\n  const [movies, setMovies] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      console.log(request.data.results);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  /*\r\n  var movie_all;\r\n  var movie_id = -1;\r\n  var movie_description = \"\";\r\n  var movie_name = \"\";\r\n  var movie_poster = \"\";\r\n  const API_IMG = \"https://image.tmdb.org/t/p/w200\";\r\n    const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n     */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: this.state.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: `row__poster  ${isLargeRow && \"row__posterLarge\"}`,\n          src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n          alt: movie.name,\n          onClick: () => {\n            //this.componentDidMount();\n            movie_all = movie;\n            movie_id = movie.id;\n            movie_name = movie.title;\n            movie_description = movie.overview;\n            movie_poster = API_IMG + movie.poster_path;\n            setShow(true);\n          }\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"movie_popup\",\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: movie_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 27\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          classNme: \"img-fluid\",\n          src: movie_poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \" Synopsis: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), \" \", movie_description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => {\n            setShow(false);\n          },\n          children: \"Unlike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n}\n//}\n_s(UserRow, \"S5fXPHwb5MsR+UndwLZquLIdLIw=\");\n_c = UserRow;\nexport default UserRow;\nvar _c;\n$RefreshReg$(_c, \"UserRow\");","map":{"version":3,"names":["Modal","Button","React","useState","useEffect","axios","base_url","result","movie_all","movie_id","movie_description","movie_name","movie_poster","API_IMG","UserRow","title","fetchUrl","isLargeRow","movies","setMovies","show","setShow","handleClose","fetchData","request","get","console","log","data","results","state","map","movie","index","poster_path","backdrop_path","name","id","overview"],"sources":["/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/UserRow.js"],"sourcesContent":["//import React, {Component, useState} from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nvar result;\r\nvar movie_all;\r\nvar movie_id = -1;\r\nvar movie_description = \"\";\r\nvar movie_name = \"\";\r\nvar movie_poster = \"\";\r\nconst API_IMG = \"https://image.tmdb.org/t/p/w200\";\r\n\r\n/*\r\nexport default class UserRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movies: [],\r\n    };\r\n  }\r\n\r\n */\r\n\r\n/*\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:5555/userInfo\", {\r\n      method: \"POST\",\r\n      crossDomain: true,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify({\r\n        token: localStorage.getItem(\"token\"),\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data, \"userInfo\");\r\n        // console.log(data.data.movID);\r\n        this.setState({ movies: data.data.movID });\r\n      });\r\n  }\r\n\r\n */\r\n\r\n  function UserRow ({title, fetchUrl}) {\r\n    //const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n    //var title = \"User\";\r\n    var isLargeRow = false;\r\n\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        const request = await axios.get(fetchUrl);\r\n        console.log(request.data.results);\r\n        setMovies(request.data.results);\r\n        return request;\r\n      }\r\n      fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    /*\r\n    var movie_all;\r\n    var movie_id = -1;\r\n    var movie_description = \"\";\r\n    var movie_name = \"\";\r\n    var movie_poster = \"\";\r\n    const API_IMG = \"https://image.tmdb.org/t/p/w200\";\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n\r\n     */\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"category-header\">\r\n          <h2>{title}</h2>\r\n        </div>\r\n\r\n        <div className=\"row__posters\">\r\n          {this.state.movies.map((movie, index) => (\r\n            <>\r\n              <img\r\n                className={`row__poster  ${isLargeRow && \"row__posterLarge\"}`}\r\n                key={movie.id}\r\n                src={`${base_url}${\r\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                }`}\r\n                alt={movie.name}\r\n                onClick={() => {\r\n                  //this.componentDidMount();\r\n                  movie_all = movie;\r\n                  movie_id = movie.id;\r\n                  movie_name = movie.title;\r\n                  movie_description = movie.overview;\r\n                  movie_poster = (API_IMG) + (movie.poster_path);\r\n                  setShow(true);\r\n                }}\r\n              ></img>\r\n            </>\r\n          ))}\r\n        </div>\r\n\r\n        <Modal className = \"movie_popup\" show={show} onHide={handleClose} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title> <b>{movie_name}</b> </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <img classNme = \"img-fluid\" src = {movie_poster}></img>\r\n            <p>\r\n              <b> Synopsis: </b> {movie_description}\r\n            </p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={() => {\r\n              setShow(false);\r\n            }}>\r\n              Unlike\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n//}\r\n\r\nexport default UserRow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}