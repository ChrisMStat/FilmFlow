{"ast":null,"code":"var _jsxFileName = \"/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/SearchRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport Login from \"./login.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nvar result;\nfunction test(id) {\n  result = id;\n  //Login.movID = id;\n  login.component.clickedMovie = id;\n  console.log(Login.movID);\n  //console.log(result);\n}\n\n;\nfunction SearchRow(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      console.log(request.data.results);\n      // console.log('pizza testing');\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  //console.log('hello');\n\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: `row__poster  ${isLargeRow && \"row__posterLarge\"}`,\n          src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n          alt: movie.name,\n          onClick: () => test(movie.id)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n/*                        <div\r\n                        onClick={() => props.handleFavouritesClick(movie)}\r\n\t\t\t\t\t\tclassName='overlay d-flex align-items-center justify-content-center'>\r\n                        </div>\r\n\r\n                        <FavouriteComponent />\r\n\r\nfunction Row({title, fetchUrl}){\r\n    useEffect(()=>{\r\n\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n    return(\r\n        <div>\r\n            <h2>{title}</h2>\r\n\r\n            {}\r\n        </div>\r\n    )\r\n}*/\n_s(SearchRow, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = SearchRow;\nexport default SearchRow;\nvar _c;\n$RefreshReg$(_c, \"SearchRow\");","map":{"version":3,"names":["React","useState","useEffect","axios","Login","base_url","result","test","id","login","component","clickedMovie","console","log","movID","SearchRow","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","map","movie","index","poster_path","backdrop_path","name"],"sources":["/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/SearchRow.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport Login from \"./login.component\";\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nvar result;\r\nfunction test(id){\r\n    result = id;\r\n   //Login.movID = id;\r\n    login.component.clickedMovie = id;\r\n    console.log(Login.movID);\r\n    //console.log(result);\r\n\r\n};\r\n\r\nfunction SearchRow({title, fetchUrl, isLargeRow}){\r\n    const[movies, setMovies] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n            console.log(request.data.results);\r\n           // console.log('pizza testing');\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[fetchUrl]);\r\n//console.log('hello');\r\n\r\n    console.log(movies);\r\n   \r\n    return (\r\n        <div className=\"row\">\r\n            <div className = \"category-header\">\r\n            <h2>{title}</h2>\r\n            </div>\r\n            \r\n            <div className=\"row__posters\">\r\n                {movies.map((movie,index)=>(\r\n                    <><img className={`row__poster  ${isLargeRow && \"row__posterLarge\"}`}\r\n                        key={movie.id}\r\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                        alt={movie.name}\r\n                        onClick = {() => test(movie.id)}\r\n                        >\r\n                        \r\n                        </img>\r\n\r\n\r\n\r\n                        </>\r\n                        \r\n                ))}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\n/*                        <div\r\n                        onClick={() => props.handleFavouritesClick(movie)}\r\n\t\t\t\t\t\tclassName='overlay d-flex align-items-center justify-content-center'>\r\n                        </div>\r\n\r\n                        <FavouriteComponent />\r\n\r\nfunction Row({title, fetchUrl}){\r\n    useEffect(()=>{\r\n\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n    return(\r\n        <div>\r\n            <h2>{title}</h2>\r\n\r\n            {}\r\n        </div>\r\n    )\r\n}*/\r\n\r\nexport default SearchRow"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,mBAAmB;AAAC;AAAA;AAGtC,MAAMC,QAAQ,GAAG,sCAAsC;AACvD,IAAIC,MAAM;AACV,SAASC,IAAI,CAACC,EAAE,EAAC;EACbF,MAAM,GAAGE,EAAE;EACZ;EACCC,KAAK,CAACC,SAAS,CAACC,YAAY,GAAGH,EAAE;EACjCI,OAAO,CAACC,GAAG,CAACT,KAAK,CAACU,KAAK,CAAC;EACxB;AAEJ;;AAAC;AAED,SAASC,SAAS,OAA+B;EAAA;EAAA,IAA9B;IAACC,KAAK;IAAEC,QAAQ;IAAEC;EAAU,CAAC;EAC5C,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEvCC,SAAS,CAAC,MAAI;IAEV,eAAemB,SAAS,GAAE;MACtB,MAAMC,OAAO,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAACN,QAAQ,CAAC;MACzCL,OAAO,CAACC,GAAG,CAACS,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAClC;MACCL,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAClB;IACAD,SAAS,EAAE;EACf,CAAC,EAAC,CAACJ,QAAQ,CAAC,CAAC;EACjB;;EAEIL,OAAO,CAACC,GAAG,CAACM,MAAM,CAAC;EAEnB,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAK,SAAS,EAAG,iBAAiB;MAAA,uBAClC;QAAA,UAAKH;MAAK;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QACV,eAEN;MAAK,SAAS,EAAC,cAAc;MAAA,UACxBG,MAAM,CAACO,GAAG,CAAC,CAACC,KAAK,EAACC,KAAK,kBACpB;QAAA,uBAAE;UAAK,SAAS,EAAG,gBAAeV,UAAU,IAAI,kBAAmB,EAAE;UAEjE,GAAG,EAAG,GAAEb,QAAS,GAAEa,UAAU,GAAGS,KAAK,CAACE,WAAW,GAAGF,KAAK,CAACG,aAAc,EAAE;UAC1E,GAAG,EAAEH,KAAK,CAACI,IAAK;UAChB,OAAO,EAAI,MAAMxB,IAAI,CAACoB,KAAK,CAACnB,EAAE;QAAE,GAH3BmB,KAAK,CAACnB,EAAE;UAAA;UAAA;UAAA;QAAA;MAMP,iBAMb;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAId;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA,GAjDSO,SAAS;AAAA,KAATA,SAAS;AA0ElB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}