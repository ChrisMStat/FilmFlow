{"ast":null,"code":"var _jsxFileName = \"/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/MovieDescription.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport ReactDom from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDescription = _ref => {\n  _s();\n  let {\n    setShowModal\n  } = _ref;\n  // close the modal when clicking outside the modal.\n  const modalRef = useRef();\n  const closeModal = e => {\n    if (e.target === modalRef.current) {\n      setShowModal(false);\n    }\n  };\n  //render the modal JSX in the portal div.\n  return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: modalRef,\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"This is a Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this), document.getElementById(\"portal\"));\n};\n_s(MovieDescription, \"zNVem5B1U/BPM1VF05fbpVyTiCs=\");\n_c = MovieDescription;\nexport default MovieDescription;\nvar _c;\n$RefreshReg$(_c, \"MovieDescription\");","map":{"version":3,"names":["React","useRef","ReactDom","MovieDescription","setShowModal","modalRef","closeModal","e","target","current","createPortal","document","getElementById"],"sources":["/Users/chrisstatton/Documents/School/Software_Engineering/FilmFlow/FilmFlow/src/MovieDescription.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport ReactDom from \"react-dom\";\n\nconst MovieDescription = ({ setShowModal }) => {\n    // close the modal when clicking outside the modal.\n    const modalRef = useRef();\n    const closeModal = (e) => {\n        if (e.target === modalRef.current) {\n            setShowModal(false);\n        }\n    };\n    //render the modal JSX in the portal div.\n    return ReactDom.createPortal(\n        <div className=\"container\" ref={modalRef} onClick={closeModal}>\n            <div className=\"modal\">\n                <h2>This is a Modal</h2>\n                <button onClick={() => setShowModal(false)}>X</button>\n            </div>\n        </div>,\n        document.getElementById(\"portal\")\n    );\n};\n\nexport default MovieDescription;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,QAAQ,MAAM,WAAW;AAAC;AAEjC,MAAMC,gBAAgB,GAAG,QAAsB;EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC;EACtC;EACA,MAAMC,QAAQ,GAAGJ,MAAM,EAAE;EACzB,MAAMK,UAAU,GAAIC,CAAC,IAAK;IACtB,IAAIA,CAAC,CAACC,MAAM,KAAKH,QAAQ,CAACI,OAAO,EAAE;MAC/BL,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EACD;EACA,oBAAOF,QAAQ,CAACQ,YAAY,eACxB;IAAK,SAAS,EAAC,WAAW;IAAC,GAAG,EAAEL,QAAS;IAAC,OAAO,EAAEC,UAAW;IAAA,uBAC1D;MAAK,SAAS,EAAC,OAAO;MAAA,wBAClB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB,eACxB;QAAQ,OAAO,EAAE,MAAMF,YAAY,CAAC,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA;EACpD;IAAA;IAAA;IAAA;EAAA,QACJ,EACNO,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CACpC;AACL,CAAC;AAAC,GAlBIT,gBAAgB;AAAA,KAAhBA,gBAAgB;AAoBtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}